name: shisper
help: A quick & dirty script to generate subs and transcriptions for your multimedia files.
version: "0.2.6"
environment_variables:
  - name: MODEL_PATH
    help: Set the model home path
    default: ${HOME}/.local/share/whispercpp
commands:
  - name: play
    help: Play a media file with generated subtitles / transcriptions
    args:
      - name: media_file
        required: true
        help: Video or audio file
    flags:
      - long: --format
        short: -f
        arg: format
        required: false
        default: srt
        help: |-
          Format for subtitles / transcription

          Supported values:
          txt vtt srt lrc words csv json json-full

  - name: transcribe
    help: Generate subtitles / transcriptions for any kind of media file
    args:
      - name: media_file
        required: true
        help: Video or audio file
    flags:
      - long: --format
        short: -f
        arg: format
        required: false
        default: srt
        help: |-
          Format for subtitles / transcription

          Supported values:
          txt vtt srt lrc words csv json
      - long: --lang
        short: -l
        arg: lang
        required: false
        default: auto
        help: |-
          Spoken language ('auto' for auto-detect)
      - long: --model
        short: -m
        arg: model
        required: false
        default: tiny
        help: |-
          Whisper models converted in ggml format

          Supported values:
            tiny tiny.en base base.en small small.en medium medium.en large-v1 large-v2 large
            note: large corresponds to the latest Large v3 model

    examples:
      - shisper transcribe --model large my_video.mkv
      - shisper transcribe my_audio.mp3

  - name: completions
    help: |-
      Generate bash completions
      Usage: eval "\$(shisper completions)"

    examples:
      - shisper play my_video.mkv
      - shisper play my_audio.mp3
